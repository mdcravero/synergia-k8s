---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-values
  namespace: tools
data:
  values.yaml: |-
    global:
      postgresql:
        auth:
          existingSecret: "secret-postgresql"
          secretKeys:
            adminPasswordKey: password

    image:
      registry: docker.io
      repository: bitnami/postgresql
      tag: "latest"
      digest: ""
      debug: true

    auth:
      enablePostgresUser: true
      existingSecret: "secret-postgresql"
      secretKeys:
        adminPasswordKey: password
      usePasswordFiles: false

    primary:
      containerSecurityContext:
        enabled: true
        seLinuxOptions: {}
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        privileged: false
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
        seccompProfile:
          type: "RuntimeDefault"
      pgHbaConfiguration: |-
        local   all             all                                     trust
        host    all             all             127.0.0.1/32            trust
        host    all             all             ::1/128                 trust
        host    all             all             10.244.0.0/16           trust
        host    all             all             10.0.0.0/8              trust
        host    all             all             172.16.0.0/12           trust
        host    all             all             192.168.0.0/16          trust
        host    all             all             0.0.0.0/0               md5
      # postgresqlConfiguration: |-
      #   listen_addresses = '*'
      podSecurityContext:
        enabled: true
        fsGroupChangePolicy: Always
        sysctls: []
        supplementalGroups: []
        fsGroup: 1000
        
      service:
        type: LoadBalancer
        ports:
          postgresql: 5432
        loadBalancerIP: 10.42.20.70
      
      persistence:
        enabled: true
        storageClass: nfs-client
        accessModes:
          - ReadWriteOnce
        size: 20Gi
        annotations:
          nfs.io/storage-path: "postgresql"

      # Enhanced security context for pods
      podSecurityContext:
        enabled: true
        fsGroupChangePolicy: Always
        sysctls: []
        supplementalGroups: []
        fsGroup: 1000

      # Init containers for dependency management
      initContainers:
        - name: wait-for-secret
          image: bitnami/postgresql:latest
          command:
            - /bin/bash
            - -ec
            - |
              # Wait for the secret to be available
              while [ ! -f /mnt/secret/password ]; do
                echo "Waiting for secret to be mounted..."
                sleep 2
              done
              echo "Secret is available, proceeding with PostgreSQL initialization"
          volumeMounts:
            - name: secret-volume
              mountPath: /mnt/secret
              readOnly: true
        - name: init-postgresql
          image: bitnami/postgresql:latest
          command:
            - /bin/bash
            - -ec
            - |
              # Ensure proper directory structure and permissions
              mkdir -p /bitnami/postgresql/conf
              chmod 755 /bitnami/postgresql/conf

              # Wait for pg_hba.conf to be available
              while [ ! -f /bitnami/postgresql/conf/pg_hba.conf ]; do
                echo "Waiting for pg_hba.conf to be mounted..."
                sleep 2
              done

              # Verify pg_hba.conf contains our custom rules
              if grep -q "10.244.0.0/16" /bitnami/postgresql/conf/pg_hba.conf; then
                echo "Custom pg_hba.conf is properly mounted"
              else
                echo "WARNING: Custom pg_hba.conf rules not found!"
                exit 1
              fi

              echo "PostgreSQL initialization ready"
          volumeMounts:
            - name: postgresql-configuration
              mountPath: /bitnami/postgresql/conf
              readOnly: true
            - name: secret-volume
              mountPath: /mnt/secret
              readOnly: true

      # Additional volumes for init containers
      extraVolumes:
        - name: secret-volume
          secret:
            secretName: secret-postgresql
        - name: postgresql-configuration
          configMap:
            name: postgresql-values

      extraVolumeMounts:
        - name: secret-volume
          mountPath: /mnt/secret
          readOnly: true

      # Enhanced PostgreSQL configuration
      postgresqlConfiguration: |
        listen_addresses = '*'
        max_connections = 200
        shared_buffers = 256MB
        effective_cache_size = 1GB
        maintenance_work_mem = 64MB
        checkpoint_completion_target = 0.9
        wal_buffers = 16MB
        default_statistics_target = 100
        random_page_cost = 1.5
        effective_io_concurrency = 200
        work_mem = 4MB
        min_wal_size = 1GB
        max_wal_size = 4GB

      # Use initialization scripts from ConfigMap
      initdb:
        scriptsConfigMap: postgresql-init-scripts
