---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jellyseerr-values
  namespace: media
data:
  values.yaml: |-
    replicaCount: 1

    strategy:
      type: Recreate

    image:
      repository: fallenbagel/jellyseerr
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: 2.6.0

    env:
      TZ: "America/Argentina/Cordoba"
      forceIpv4First: true
      LOG_LEVEL: debug

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: LoadBalancer
      port: 5055
      loadBalancerIP: 10.42.20.61

    ingress:
      enabled: true
      ingressClassName: traefik
      hosts:
        - host: jellyseerr.synergia.net.ar
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: jellyseerr
                  port:
                    number: 5055

    extraVolumes: []

    extraVolumeMounts: []

    
    persistence:
      config:
        enabled: true
        storageClass: "nfs-client"
        annotations: {}
        accessModes:
          - ReadWriteOnce
        size: 100Mi
        name: jellyseerr-config

    # persistence:
    #   config:
    #     enabled: true
    #     ## If defined, storageClassName: <storageClass>
    #     ## If set to "-", storageClassName: "", which disables dynamic provisioning
    #     ## If undefined (the default) or set to null, no storageClassName spec is
    #     ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    #     ##   GKE, AWS & OpenStack)
    #     ##
    #     storageClass: "nfs-client"
    #     annotations: {}
    #     existingClaim: ""
    #     accessModes:
    #       - ReadWriteOnce
    #     size: 100Mi
    #     volumeName: ""

    resources: {}
  

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}
