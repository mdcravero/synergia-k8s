apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-values
  namespace: monitoring
data:
  values.yaml: |-
    server:
      name: server

      persistentVolume:
        enabled: true
        storageClass: "nfs-client"
        accessModes:
          - ReadWriteOnce
        size: 8Gi

      env:
        - name: TZ
          value: "America/Argentina/Cordoba"
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"

      service:
        enabled: true
        annotations: {}
        type: LoadBalancer
        servicePort: 80
      
      ingress:
        enabled: true
        pathType: Prefix
        hosts:
        - prometheus.synergia.net.ar
        path: /
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"    
          traefik.ingress.kubernetes.io/router.tls.certresolver: le

    kube-state-metrics:
      enabled: true

    prometheus-node-exporter:
      enabled: true

      rbac:
        pspEnabled: false

      containerSecurityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      hostNetwork: false  
      hostPort:          
        enabled: false
     
    ruleFiles: {}

    serverFiles:
      prometheus.yml:
        rule_files:
          - /etc/config/recording_rules.yml
          - /etc/config/alerting_rules.yml
        scrape_configs:
          
          - job_name: node
            static_configs:
              - targets: ['prometheus-prometheus-node-exporter.monitoring.svc.cluster.local:9100']
          
          - job_name: prometheus
            static_configs:
              - targets: ['localhost:9090']

          - job_name: kube-state-metrics
            static_configs:
              - targets: ['prometheus-kube-state-metrics.monitoring.svc.cluster.local:8080']

          - job_name: 'kubernetes-pods'
            honor_labels: true

            kubernetes_sd_configs:
              - role: pod

            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
                action: drop
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                action: replace
                regex: (https?)
                target_label: __scheme__
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
                action: replace
                regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
                replacement: '[$2]:$1'
                target_label: __address__
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
                action: replace
                regex: (\d+);((([0-9]+?)(\.|$)){4})
                replacement: $2:$1
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod
              - source_labels: [__meta_kubernetes_pod_phase]
                regex: Pending|Succeeded|Failed|Completed
                action: drop
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
          
          - job_name: 'kubernetes-nodes-cadvisor'

            scheme: https
            
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

            kubernetes_sd_configs:
              - role: node
            
            relabel_configs:
              - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
              replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

    alertmanager:
      enabled: false
