apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-values
  namespace: monitoring
data:
  values.yaml: |-
    global:
      imageRegistry: null
      imagePullSecrets: []

    serviceAccount:
      create: true
      name: grafana-sa

    replicas: 1

    deploymentStrategy:
      type: RollingUpdate

    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000

    livenessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 60
      timeoutSeconds: 30
      failureThreshold: 10

    image:
      registry: docker.io
      repository: grafana/grafana
      tag: "10.2.3"
      pullPolicy: IfNotPresent

    env: 
      PUID: 1000
      PGID: 1000
      TZ: "America/Argentina/Cordoba"

    persistence:
      enabled: true
      storageClassName: "nfs-client"
      accessModes:
        - ReadWriteOnce
      size: 5Gi

    initChownData:
      enabled: false

    admin:
      existingSecret: "secret-grafana"
      userKey: "admin-user"
      passwordKey: "admin-password"

    service:
      enabled: true
      type: LoadBalancer
      port: 80
      targetPort: 3000

    ingress:
      enabled: true
      pathType: Prefix
      hosts:
        - grafana.synergia.net.ar
      path: /
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"    
        traefik.ingress.kubernetes.io/router.tls.certresolver: le

    tolerations: []

    affinity: {}

    nodeSelector: {}

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - access: proxy
          basicAuth: false
          isDefault: true
          jsonData:
            maxLines: 1000
            timeout: 30
            alerting: false
            queryType: "range"
            metrics: false
            logs: true
          name: loki-home
          type: loki
          url: http://loki-stack:3100