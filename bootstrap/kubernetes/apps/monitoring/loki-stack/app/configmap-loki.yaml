apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-stack-values
  namespace: monitoring
data:
  values.yaml: |
    loki:
      affinity: {}
      alerting_groups: []
      annotations: {}
      client: {}
      config:
        auth_enabled: false
        chunk_store_config:
          max_look_back_period: 0s
        compactor:
          shared_store: filesystem
          working_directory: /data/loki/boltdb-shipper-compactor
        ingester:
          chunk_block_size: 262144
          chunk_idle_period: 3m
          chunk_retain_period: 1m
          lifecycler:
            ring:
              replication_factor: 1
          max_transfer_retries: 0
          wal:
            dir: /data/loki/wal
        limits_config:
          split_queries_by_interval: 30m
          enforce_metric_name: false
          max_entries_limit_per_query: 5000
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_query_parallelism: 2
        memberlist:
          join_members:
          - 'loki-stack-memberlist'
        schema_config:
          configs:
          - from: "2020-10-24"
            index:
              period: 24h
              prefix: index_
            object_store: filesystem
            schema: v11
            store: boltdb-shipper
        server:
          grpc_listen_port: 9095
          http_listen_port: 3100
        storage_config:
          boltdb_shipper:
            active_index_directory: /data/loki/boltdb-shipper-active
            cache_location: /data/loki/boltdb-shipper-cache
            cache_ttl: 24h
            shared_store: filesystem
          filesystem:
            directory: /data/loki/chunks
        table_manager:
          retention_deletes_enabled: false
          retention_period: 0s
        ruler:
          storage:
            type: local
            local:
              directory: /data/loki/rules
          rule_path: /data/loki/rules
          alertmanager_url: http://alertmanager:9093
          ring:
            kvstore:
              store: inmemory
          enable_api: true
        query_range:
          align_queries_with_step: true
          max_retries: 2
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      datasource:
        jsonData: '{}'
        uid: ""
      enabled: true
      env: []
      extraArgs: {}
      extraContainers: []
      extraEnvFrom: []
      extraPorts: []
      extraVolumeMounts: []
      extraVolumes: []
      global: {}
      image:
        pullPolicy: IfNotPresent
        repository: grafana/loki
        tag: 2.9.3
      ingress:
        annotations: {}
        enabled: false
        hosts:
        - host: chart-example.local
          paths: []
        tls: []
      initContainers: []
      isDefault: true
      livenessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      networkPolicy:
        enabled: false
      nodeSelector: {}
      persistence:
        enabled: true
        storageClassName: "nfs-client"
        accessModes:
          - ReadWriteOnce
        size: 10Gi
      podAnnotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
      podDisruptionBudget: {}
      podLabels: {}
      podManagementPolicy: OrderedReady
      rbac:
        create: true
        pspEnabled: true
      readinessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      service:
        annotations: {}
        labels: {}
        nodePort: null
        port: 3100
        targetPort: http-metrics
        type: ClusterIP
      serviceAccount:
        annotations: {}
        automountServiceAccountToken: true
        create: true
        name: null
      serviceMonitor:
        additionalLabels: {}
        annotations: {}
        enabled: false
        interval: ""
        prometheusRule:
          additionalLabels: {}
          enabled: false
          rules: []
        scheme: null
        tlsConfig: {}
      terminationGracePeriodSeconds: 4800
      tolerations: []
      topologySpreadConstraints:
        enabled: false
      tracing:
        jaegerAgentHost: null
      updateStrategy:
        type: RollingUpdate
      url: http://loki-stack:3100
      useExistingAlertingGroup:
        configmapName: ""
        enabled: false

    promtail:
      enabled: true
      config:
        clients:
          - url: http://loki-stack.monitoring.svc.cluster.local:3100/loki/api/v1/push
        positions:
          filename: /tmp/positions.yaml
        scrape_configs:
          - job_name: system
            static_configs:
              - targets:
                  - localhost
                labels:
                  job: varlogs
                  __path__: /var/log/**/*.log


    grafana:
      enabled: false
    fluent-bit:
      enabled: false
    logstash:
      enabled: false